import java.io.*;//Note: All of the exercises have been done in their own static methods.import java.io.BufferedReader;import java.io.InputStreamReader;public class Main {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        //run statements for all of the exercises in chapter one        //exerciseOne();        //exerciseTwo();        //for exercise three        //String [] line = br.readLine().split(" ");        //int a = Integer.parseInt(line[0]), b = Integer.parseInt(line[1]), c = Integer.parseInt(line[0]);        //exerciseThree(a,b,c);        //Exercise four no method req            //ans a) the word "then" is not a command and therefore will cause an error.            //ans b) round brackets around the a > b expression as so: (a > b)            //ans c) Nothing's wrong.            //ans d) Nothing's technically wrong, however brace brackets would be ideal especially due to the else statement. It's bad practice otherwise.        //for exercise five        //String [] line = br.readLine().split(" ");        //exerciseFive(Double.parseDouble(line[0]), Double.parseDouble(line[1]));        //exerciseSix();        //exerciseSeven(); //results rewritten in method        //exerciseEight();        //exerciseNine(Integer.parseInt(br.readLine()));        //exercise ten ans is provided in the textbook.        //exerciseEleven();        //exerciseTwelve();        //for exercise thirteen            //String [] line = br.readLine().split(" ");            //exerciseThirteen(Integer.parseInt(line[0]), Integer.parseInt(line[1]));    }//    private static void exerciseOne(){//        int a = (0 + 15)/2;//        double b = 2.0e-6 * 100000000.1; //note that type conversion is needed due to second number.//        boolean c = true && false || true && true;////        System.out.println("a = " + a);//        System.out.println("b = " + b);//        System.out.println("c = " + c);////        //results were as follows:////            a = 7////            b = 200.0000002////            c = true//    }//    private static void exerciseTwo(){//        double a = (1+2.236)/2;//        double b = 1 + 2 + 3 + 4.0;//        boolean c = 4.1 >= 4;//        String d = 1 + 2 + "3";////        System.out.println("a = " + a);//        System.out.println("b = " + b);//        System.out.println("c = " + c);//        System.out.println("d = " + d);////            //results were as follows:////            a = 1.618////            b = 10.0////            c = true////            d = 33////    }//    private static void exerciseThree(int a, int b, int c){//        if(a == b && b == c){//            System.out.println("equal");//        }//        else{//            System.out.println("not equal");//        }//    }//    private static void exerciseFive(double x, double y){//        if(x > 0 && x < 1 && y > 0 && y < 1){//            System.out.println("true");//        }//        else {//            System.out.println("false");//        }//    }//    private static void exerciseSix(){//        int f = 0, g = 1;//        for(int i = 0; i <= 15; i++){//            System.out.println(f);//            f+=g;//            g= f - g;//        }//    }//    private static void exerciseSeven(){//////        //part a////        double t = 9.0;////        while(Math.abs(t-9.0/t)>0.001){////            t = (9.0/t+t)/2.0;////            System.out.printf("%.5f\n", t);////        }////            //Results://            //5.00000//            //3.40000//            //3.02353//            //3.00009////////        //part b RESULT: 499500////        int sum = 0;////        for(int i = 1; i < 1000; i++){////            for(int j = 0; j < i; j++){////                sum++;////            }////        }////        System.out.println(sum);////        //part c RESULT: 1023//        int sum2 = 0;//        for(int i = 1; i < 1000; i*=2){//            for(int j = 0; j < i; j++){//                sum2++;//            }//        }//        System.out.println(sum2);////    }//    private static void exerciseEight(){//        System.out.println('b'); //ans: b//        System.out.println('b' + 'c'); //ans: 197 (which is the result of the sum of ascii val of b and c//        System.out.println((char)'a'+4); //ans: 101 (numerical val of e)//    }//    private static void exerciseNine(int N){//////        //the following code is my solution (not the most efficient/concise as textbook one below)////        String s = ""; int a = 0;////////        while(N >= 1){////            a = N%2;////            N /=2;////            s += String.valueOf(a);////        }////////        for(int i = s.length()-1; i >= 0; i--){////            System.out.print(s.charAt(i));////        }////        System.out.println();////        //following is tb code but note that the ans is reversed. Therefore, its not actually correct.//        String line = "";////        for(int i = N; i > 0; i/=2){//            line = (i %2) + line;//        }//        System.out.println(line);////    }//    private static void exerciseEleven(){////        boolean [][] randArray = new boolean[3][3];////        //randomising some of the values.//        randArray[2][1] = true;//        randArray[1][1] = true;//        randArray[0][2] = true;////        //in this case I am assuming that I know the dimensions of the array//        for(int i = 0; i < 3; i++){//            for(int j = 0; j < 3; j++){//                if(randArray[i][j]){//                    System.out.println("row " + (i+1) + ", column " + (j+1) + ", value: *");//                }//                else {//                    System.out.println("row " + (i+1) + ", column " + (j+1) + ", value: ");//                }//            }//        }//    }//    private static void exerciseTwelve(){//        int [] a =new int[10];//        for(int i = 0 ; i < 10; i++){//            a[i] = 9-i;//        }//        for(int i = 0; i < 10; i++){//            a[i] = a[a[i]];//        }//        for(int i = 0; i < 10; i++){//            System.out.println(a[i]); //textbook made a mistake here. Pretty sure its supposed to be a[i] not i.//        }//    }//    private static void exerciseThirteen(int M, int N){//        int [][] randomArray = new int[M][N];////        //setting random val for M by N array.//        for(int i = 0; i < M; i++){//            for(int j = 0; j < N; j++){//                randomArray[i][j] = (int)(Math.random()* Integer.MAX_VALUE)+1;//            }//        }////        //printing out values column by column hence "transposition".//        for(int i = 0; i < N; i++){//            for(int j  = 0; j < M; j++){//                System.out.println("row " + (j+1) + ", column " + (i+1) + ", value: " + randomArray[j][i]);//            }//        }//    }    private static void exerciseFourteen(){    }}